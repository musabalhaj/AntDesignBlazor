@page "/purchases"
@inject IPurchasesViewModel PurchasesViewModel
@inject IPurchaseDetailsViewModel PurchaseDetailsViewModel
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime

<Breadcrumb>
    <BreadcrumbItem Href="/">Home</BreadcrumbItem>
    <BreadcrumbItem>Purchases</BreadcrumbItem>
</Breadcrumb>
<Divider />


<Button Type="@ButtonType.Primary" OnClick="@(() => NavigationManager.NavigateTo(" createpurchases"))" Icon="plus">
    New Purchase
</Button>


<Card Hoverable Title="Purchases List">

    <Table DataSource="Purchasess" Size="TableSize.Small" Class="table table-responsive" Loading="_loading"
           Bordered PaginationPosition="bottomCenter">

        <RowTemplate>
            <Column @bind-Field="@context.Id" Title="Bill">BILL-@context.Id</Column>
            <Column @bind-Field="@context.CustomerId" Title="Customer">@context.Customer.Name</Column>
            <Column @bind-Field="@context.Date" TData="DateTime" Format="dd/MM/yyy" Filterable>
                @context.Date.ToLongDateString()
            </Column>
            <Column @bind-Field="@context.Total">@context.Total SDG</Column>
            <ActionColumn Title="Actions">
                <Space>
                    <SpaceItem>
                        <Button Type="@ButtonType.Link" Icon="eye" Color="Color.Blue5"
                                OnClick="@(() => display(context.Id))">
                        </Button>
                        <Button Type="@ButtonType.Link" Icon="edit" Color="Color.Green5"
                                OnClick="@(() => NavigationManager.NavigateTo($"editpurchases/{context.Id}"))">
                        </Button>
                        <Button Danger OnClick="@(()=>{ _visible = true; _Id = context.Id; })">
                            <Icon Type="delete" Theme="outline" />
                        </Button>
                    </SpaceItem>
                </Space>
            </ActionColumn>
        </RowTemplate>
    </Table>

</Card>

<Modal Title="@_title" Visible="@_visible" OnOk="@HandleOk" OnCancel="@HandleCancel" DestroyOnClose="true" OkType="danger">
    Do you want to Delete This Purchase?
</Modal>

@code{
    [CascadingParameter]
    public Error Error { get; set; }

    bool _loading;
    public List<Purchases> Purchasess { get; set; } = new List<Purchases>();

    protected override async Task OnInitializedAsync()
    {
        try
        {
            _loading = true;
            Purchasess = (await PurchasesViewModel.GetPurchases()).ToList();
            _loading = false;
        }
        catch (Exception ex)
        {
            Error.ProcessError(ex);
        }

    }

    string _title = "Delete Confirmation";
    bool _visible = false;
    int _Id;

    private async Task HandleOk(MouseEventArgs e)
    {
        try
        {
            await PurchasesViewModel.DeletePurchases(_Id);
            Purchasess = (await PurchasesViewModel.GetPurchases()).ToList();
            _visible = false;
            PurchasesViewModel.HandleSuccessDelete();
        }
        catch (Exception ex)
        {
            Error.ProcessError(ex);
        }

    }


    private void HandleCancel(MouseEventArgs e)
    {
        _visible = false;
    }

    private async Task display(int id)
    {
        await JSRuntime.InvokeAsync<object>("open", new object[] { $"displaypurchases/{id}", "_blank" });
    }
}
