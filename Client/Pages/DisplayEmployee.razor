@page "/displayemployee/{id}"
@inject IEmployeeService EmployeeService
@inject NavigationManager NavigationManager
@inject IDepartmentService DepartmentService

<div class="mb-2">
    <Breadcrumb>
        <BreadcrumbItem Href="/">Home</BreadcrumbItem>
        <BreadcrumbItem Href="/employees">Employees</BreadcrumbItem>
        <BreadcrumbItem>Information</BreadcrumbItem>
    </Breadcrumb>
</div>
<hr />

<div>
    <Card Hoverable Loading="_loading" Style="width: 400px; margin-top: 16px; margin: auto">
        <Body>
            <ul class="list-group list-unstyled mb-3">
                <li class="list-group-item"><CardMeta Avatar="@Employee.PhotoPath" /></li>
                <li class="list-group-item">
                    <b><i class="oi oi-person"></i> Full Name :</b> <a>@Employee.FirstName @Employee.LastName</a>
                </li>
                <li class="list-group-item">
                    <b><i class="oi oi-envelope-open"></i> Email :</b> <a>@Employee.Email</a>
                </li>
                <li class="list-group-item">
                    <b><i class="oi oi-list"></i> Department :</b> <a>@Employee.Department.DepartmentName</a>
                </li>
                <li class="list-group-item">
                    <b><i class="oi oi-person"></i> Gender :</b> <a>@Employee.Gender</a>
                </li>
                <li class="list-group-item">
                    <b><i class="oi oi-clock"></i> Birth Date :</b> <a>@Employee.DateOfBirth.ToShortDateString()</a>
                </li>
            </ul>
        </Body>
    </Card>
</div>

@code {
    [CascadingParameter]
    public Error Error { get; set; }

    [Parameter]
    public string Id { get; set; }
    public List<Department> Departments { get; set; } = new List<Department>();
    public Department Department { get; set; } = new Department();
    public Employee Employee { get; set; } = new Employee();
    bool _loading;

    protected async override Task OnInitializedAsync()
    {
        try
        {
            _loading = true;
            Employee = await EmployeeService.GetEmployee(int.Parse(Id));
            Departments = (await DepartmentService.GetDepartments()).ToList();
            _loading = false;
        }
        catch (Exception ex)
        {

            Error.ProcessError(ex);
        }
    }
}
