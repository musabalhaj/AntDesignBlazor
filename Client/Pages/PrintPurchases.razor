@page "/printpurchases"
@inject IPurchasesViewModel PurchasesViewModel
@layout PrintLayout
    <body onload="window.print()">
        <Card Hoverable Title="Purchases List">

            <Table DataSource="Purchasess" Size="TableSize.Small" Class="table table-responsive" Loading="_loading"
                   Bordered PaginationPosition="bottomCenter">

                <RowTemplate>
                    <Column @bind-Field="@context.ItemName" Filterable Sortable Fixed="left"></Column>
                    <Column @bind-Field="@context.CategoryId" Title="Category">@context.Category.Name</Column>
                    <Column @bind-Field="@context.Price"></Column>
                    <Column @bind-Field="@context.Quantaty"></Column>
                    <Column @bind-Field="@context.Date" TData="DateTime" Format="dd/MM/yyy" Filterable>
                        @context.Date.ToLongDateString()
                    </Column>
                </RowTemplate>
                <ExpandTemplate>
                    Description :  @context.Data.Description
                </ExpandTemplate>
            </Table>

        </Card>
    </body>

    @code{
        [CascadingParameter]
        public Error Error { get; set; }

        bool _loading;
        public List<Purchases> Purchasess { get; set; } = new List<Purchases>();

        protected override async Task OnInitializedAsync()
        {
            try
            {
                _loading = true;
                Purchasess = (await PurchasesViewModel.GetPurchases()).ToList();
                _loading = false;
            }
            catch (Exception ex)
            {
                Error.ProcessError(ex);
            }

        }



    }
